{"version":3,"sources":["../../controllers/parcelcontroller.js"],"names":["parcelController","req","res","newId","allParcels","length","id","packageName","body","destination","pickupLocation","price","newParcel","status","cancelled","push","json","message","response","parcels","parcelId","params","findParcel","helper","findFromDb","parcel","newStatus","toCancel","allCurrentParcels","filter","allparcel"],"mappings":"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","file":"parcelcontroller.js","sourcesContent":["import allParcels from '../sampleDatabase/parceldb';\nimport helper from '../helpers/findFromDb';\n\nclass parcelController {\n    // this is to create a new parcel\n    static createNewParcel (req, res) {\n        let newId = allParcels[allParcels.length - 1].id + 1;\n        const packageName = req.body.packageName, destination = req.body.destination, pickupLocation = req.body.pickupLocation, price = req.body.price;\n        const newParcel = {\n            id: newId,\n            packageName,\n            destination,\n            pickupLocation,\n            price,\n            status: \"\",\n            cancelled: false\n        };\n        if (newParcel) {\n            allParcels.push(newParcel)\n            return res.status(200).json({\n                message: \"new parcel created\"\n            })\n        }else {\n            return res.status(400).json({\n                message: \"could not add new parcel\"\n            })\n        }\n    }\n    // this is to get all parcels\n    static getAllParcels (req, res) {\n        return res.json({\n            response: \"you have sent me a get request to get all questions\",\n            parcels: allParcels\n        })\n    }\n    // this is to get a specific parcel\n    static getSpecificParcel (req, res) {\n        let parcelId = req.params.id;\n        const findParcel = helper.findFromDb(allParcels, 'id', parcelId);\n        if (findParcel) {\n            return res.status(200).json({\n                message: \"the parcel was found\",\n                parcel: findParcel\n            })\n        }else {\n            return res.status(400).json({\n                message: \"sorry the parcel was not found\"\n            })\n        }\n    }\n    // this is to update a parcel order status\n    static updateParcelStatus (req, res) {\n        let parcelId = req.params.id;\n        const findParcel = helper.findFromDb(allParcels, 'id', parcelId);\n        if (findParcel) {\n            const newStatus = req.body.newStatus;\n            res.status(200).json({\n                message: \"parcel updated successfully\"\n            })\n            return findParcel.status = newStatus\n        }else {\n           return res.status(400).json({\n                message: \"could not update parcel order\"\n            })\n        }\n    }\n    // this is to cancel a specific order\n    static cancelParcelOrder (req, res) {\n        let parcelId = req.params.id;\n        const findParcel = helper.findFromDb(allParcels, 'id', parcelId);\n        if (findParcel) {\n            const toCancel = req.body.cancelled;\n            res.status(200).json({\n                message: \"this parcel order has been cancelled successfully\"\n            })\n            return findParcel.cancelled = toCancel;\n        }else {\n           return res.status(400).json({\n                message: \"could not update parcel order\"\n            })\n        }\n    }\n    // this is to delete a specific parcel order\n    static deleteSpecificParcel (req, res) {\n        let parcelId = req.params.id;\n        const findParcel = helper.findFromDb(allParcels, 'id', parcelId);\n        if (findParcel) {\n            const allCurrentParcels = allParcels.filter(parcel => {\n                return parcel !== findParcel\n            })\n            res.status(200).json({\n                message: \"parcel successfully deleted\",\n                allparcel: allCurrentParcels\n            })\n        }else {\n            return res.status(400).json({\n                message: \"could not delete the parcel\"\n            })\n        }\n    }\n}\nexport default parcelController;"]}
{"version":3,"sources":["../../controllers/parcelcontroller.js"],"names":["parcelController","req","res","newId","allParcels","length","id","body","packageName","destination","pickupLocation","price","newParcel","status","cancelled","push","json","message","response","parcels","parcelId","params","findParcel","helper","findFromDb","parcel","newStatus","toCancel","allCurrentParcels","filter","allparcel"],"mappings":"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","file":"parcelcontroller.js","sourcesContent":["import allParcels from '../sampleDatabase/parceldb';\nimport helper from '../helpers/findFromDb';\n\nclass parcelController {\n  // this is to create a new parcel\n  static createNewParcel(req, res) {\n    const newId = allParcels[allParcels.length - 1].id + 1;\n    const { packageName, destination, pickupLocation, price } = req.body;\n    const newParcel = {\n      id: newId,\n      packageName,\n      destination,\n      pickupLocation,\n      price,\n      status: '',\n      cancelled: false\n    };\n    if (newParcel) {\n      allParcels.push(newParcel);\n      return res.status(200).json({\n        message: 'new parcel created'\n      });\n    }\n    return res.status(400).json({\n      message: 'could not add new parcel'\n    });\n  }\n  // this is to get all parcels\n\n  static getAllParcels(req, res) {\n    return res.json({\n      response: 'you have sent me a get request to get all questions',\n      parcels: allParcels\n    });\n  }\n  // this is to get a specific parcel\n\n  static getSpecificParcel(req, res) {\n    const parcelId = req.params.id;\n    const findParcel = helper.findFromDb(allParcels, 'id', parcelId);\n    if (findParcel) {\n      return res.status(200).json({\n        parcel: findParcel\n      });\n    }\n    return res.status(400).json({\n      message: 'sorry the parcel was not found'\n    });\n  }\n  // this is to update a parcel order status\n\n  static updateParcelStatus(req, res) {\n    const parcelId = req.params.id;\n    const findParcel = helper.findFromDb(allParcels, 'id', parcelId);\n    if (findParcel) {\n      const { newStatus } = req.body;\n      findParcel.status = newStatus;\n      return res.status(200).json({\n        message: 'parcel updated successfully'\n      });\n    }\n    return res.status(400).json({\n      message: 'could not update parcel order'\n    });\n  }\n  // this is to cancel a specific order\n\n  static cancelParcelOrder(req, res) {\n    const parcelId = req.params.id;\n    const findParcel = helper.findFromDb(allParcels, 'id', parcelId);\n    if (findParcel) {\n      const toCancel = req.body.cancelled;\n      findParcel.cancelled = toCancel;\n      return res.status(200).json({\n        message: 'this parcel order has been cancelled successfully'\n      });\n    }\n    return res.status(400).json({\n      message: 'could not update parcel order'\n    });\n  }\n  // this is to delete a specific parcel order\n\n  static deleteSpecificParcel(req, res) {\n    const parcelId = req.params.id;\n    const findParcel = helper.findFromDb(allParcels, 'id', parcelId);\n    if (findParcel) {\n      const allCurrentParcels = allParcels.filter(parcel => {\n        return parcel !== findParcel;\n      });\n      return res.status(200).json({\n        message: 'parcel successfully deleted',\n        allparcel: allCurrentParcels\n      });\n    }\n    return res.status(400).json({\n      message: 'could not delete the parcel'\n    });\n  }\n  // end of class\n}\nexport default parcelController;\n"]}